/*
 * ScrabbleWindow.java
 *
 * Created on November 10, 2007, 2:02 PM
 */
package gui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Collections;
import java.util.List;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import persistence.PersistenceWindow;
import persistence.SavedBoard;
import scrabblehelper.StaticFields;
import scrabbletools.Board;
import scrabbletools.BoardAnagramUtils;
import scrabbletools.LetterScores;
import scrabbletools.WordPlacement;

/**
 *
 * @author  Nick
 */
public class ScrabbleWindow extends javax.swing.JFrame {

    BoardAnagramUtils utils = new BoardAnagramUtils(new Board());
    PersistenceWindow persistenceWindow = new PersistenceWindow(this);

    /** Creates new form ScrabbleWindow */
    public ScrabbleWindow() {
        super("Scrabble Solver");
        initComponents();
        
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (d.width - getWidth()) / 2;
        int y = (d.height - getHeight()) / 2;
        setLocation(x, y);
        
        setResizable(false);
        utils.setDictionary(StaticFields.getDictionary());
        rackLetterField.setDocument(new PlainDocument() {

            @Override
            public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
                        String upCase = str.toUpperCase();
                        if (this.getLength() >= 7) {
                            return;
                        }
                        if (Character.isLetter(upCase.charAt(0)) || str.charAt(0) == LetterScores.UNUSED_BLANK) {
                            super.insertString(offs, upCase, a);
                        }
                    }
                });
                
    }

    public void setLetters(char[][] letters) {
        utils.getBoard().setLetters(letters);
    }
    
    public SavedBoard getBoard() {
        SavedBoard result = new SavedBoard(scrabbleBoard.getCharArray());
        result.setRack(rackLetterField.getText());
        return result;
    }
    
    public void applyBoard(SavedBoard sb) {
        scrabbleBoard.setBoard(sb);
        setLetters(sb.getBoard());
        rackLetterField.setText(sb.getRack());
    }

    public void solve() {
        setLetters(scrabbleBoard.getCharArray());
        utils.setLetters(rackLetterField.getText().toUpperCase().toCharArray());
        long startTime = System.currentTimeMillis();
        List<WordPlacement> words = utils.findAllBoardPossibilities();
        long time = System.currentTimeMillis() - startTime;
        Collections.sort(words);
        resultDisplay.setText("");
        for (WordPlacement wp : words) {
            resultDisplay.append(wp.toString() + "\n\n");
        }
        resultDisplay.append("Total number of unique word placements:  " + words.size() + "\n");
        resultDisplay.append("Time to process (in milliseconds):  " + time);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrabbleBoard = new gui.ScrabbleBoardPanel();
        rackLetterField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultDisplay = new javax.swing.JTextArea();
        anagramButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        loadSaveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rackLetterField.setFont(new java.awt.Font("Tahoma", 0, 42));
        rackLetterField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rackLetterField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rackLetterFieldActionPerformed(evt);
            }
        });
        rackLetterField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rackLetterFieldKeyReleased(evt);
            }
        });

        jButton1.setText("Solve Board!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        resultDisplay.setColumns(20);
        resultDisplay.setEditable(false);
        resultDisplay.setLineWrap(true);
        resultDisplay.setRows(5);
        resultDisplay.setText("Instructions:\n\nFill in the board, enter your letters in the rack above, then press Solve Board!\n\n\n\nExtra Instructions:\n\nHold down shift while filling in the board to indicate played blanks.  They will show up as lowercase letters.\n\nUse the arrow keys to toggle between typing horizontally and vertically.\n\n\n\n\nEmail suggestions or comments to nwilkie@bigfoot.com\n");
        resultDisplay.setWrapStyleWord(true);
        jScrollPane1.setViewportView(resultDisplay);

        anagramButton.setText("Anagram");
        anagramButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anagramButtonActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("enter as zero (0) in rack.");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("To play blank tile,");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("This will significantly");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("extend calculation time.");

        loadSaveButton.setText("Load/Save");
        loadSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadSaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrabbleBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anagramButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rackLetterField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(loadSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel1)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addComponent(rackLetterField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(anagramButton)
                            .addComponent(jButton1)
                            .addComponent(loadSaveButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addComponent(scrabbleBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        solve();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void anagramButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anagramButtonActionPerformed
        new AnagramWindow().setVisible(true);        
}//GEN-LAST:event_anagramButtonActionPerformed

    private void rackLetterFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rackLetterFieldActionPerformed
        solve();
    }//GEN-LAST:event_rackLetterFieldActionPerformed

    private void rackLetterFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rackLetterFieldKeyReleased
           
    }//GEN-LAST:event_rackLetterFieldKeyReleased

    private void loadSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadSaveButtonActionPerformed
        persistenceWindow.setVisible(true);
        persistenceWindow.requestFocus();
    }//GEN-LAST:event_loadSaveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

                    public void run() {
                        new ScrabbleWindow().setVisible(true);
                    }
                });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anagramButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadSaveButton;
    private javax.swing.JTextField rackLetterField;
    private javax.swing.JTextArea resultDisplay;
    private gui.ScrabbleBoardPanel scrabbleBoard;
    // End of variables declaration//GEN-END:variables

}
